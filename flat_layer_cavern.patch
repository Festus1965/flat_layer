diff --git a/src/mapgen/mapgen_flat.cpp b/src/mapgen/mapgen_flat.cpp
index 11b27f85..03d92933 100644
--- a/src/mapgen/mapgen_flat.cpp
+++ b/src/mapgen/mapgen_flat.cpp
@@ -42,6 +42,9 @@ with this program; if not, write to the Free Software Foundation, Inc.,
 FlagDesc flagdesc_mapgen_flat[] = {
 	{"lakes", MGFLAT_LAKES},
 	{"hills", MGFLAT_HILLS},
+	{"caverns",     MGFLAT_CAVERNS},
+	{"layers",     MGFLAT_LAYERS},
+	{"altitude_chill",     MGFLAT_ALT_CHILL},
 	{NULL,    0}
 };
 
@@ -56,6 +59,9 @@ MapgenFlat::MapgenFlat(int mapgenid, MapgenFlatParams *params, EmergeManager *em
 	large_cave_depth = params->large_cave_depth;
 	lava_depth       = params->lava_depth;
 	cave_width       = params->cave_width;
+	cavern_limit     = params->cavern_limit;
+	cavern_taper     = params->cavern_taper;
+	cavern_threshold = params->cavern_threshold;
 	lake_threshold   = params->lake_threshold;
 	lake_steepness   = params->lake_steepness;
 	hill_threshold   = params->hill_threshold;
@@ -71,6 +77,7 @@ MapgenFlat::MapgenFlat(int mapgenid, MapgenFlatParams *params, EmergeManager *em
 	// 3D noise
 	MapgenBasic::np_cave1 = params->np_cave1;
 	MapgenBasic::np_cave2 = params->np_cave2;
+	MapgenBasic::np_cavern = params->np_cavern;
 }
 
 
@@ -87,7 +94,8 @@ MapgenFlatParams::MapgenFlatParams():
 	np_terrain      (0, 1,   v3f(600, 600, 600), 7244,  5, 0.6, 2.0),
 	np_filler_depth (0, 1.2, v3f(150, 150, 150), 261,   3, 0.7, 2.0),
 	np_cave1        (0, 12,  v3f(61,  61,  61),  52534, 3, 0.5, 2.0),
-	np_cave2        (0, 12,  v3f(67,  67,  67),  10325, 3, 0.5, 2.0)
+	np_cave2        (0, 12,  v3f(67,  67,  67),  10325, 3, 0.5, 2.0),
+	np_cavern       (0.0,   1.0,   v3f(384,  128,  384),  723,   5, 0.63, 2.0)
 {
 }
 
@@ -110,6 +118,12 @@ void MapgenFlatParams::readParams(const Settings *settings)
 	settings->getNoiseParams("mgflat_np_filler_depth", np_filler_depth);
 	settings->getNoiseParams("mgflat_np_cave1",        np_cave1);
 	settings->getNoiseParams("mgflat_np_cave2",        np_cave2);
+	settings->getS16NoEx("mgflat_cavern_limit",           cavern_limit);
+	settings->getS16NoEx("mgflat_cavern_taper",           cavern_taper);
+	settings->getFloatNoEx("mgflat_cavern_threshold",     cavern_threshold);
+	settings->getNoiseParams("mgflat_np_cavern",            np_cavern);
+	settings->getNoiseParams("mgflat_np_cave1",             np_cave1);
+	settings->getNoiseParams("mgflat_np_cave2",             np_cave2);
 }
 
 
@@ -126,11 +140,17 @@ void MapgenFlatParams::writeParams(Settings *settings) const
 	settings->setFloat("mgflat_hill_steepness", hill_steepness);
 	settings->setS16("mgflat_dungeon_ymin",     dungeon_ymin);
 	settings->setS16("mgflat_dungeon_ymax",     dungeon_ymax);
+	settings->setS16("mgflat_cavern_limit",           cavern_limit);
+	settings->setS16("mgflat_cavern_taper",           cavern_taper);
+	settings->setFloat("mgflat_cavern_threshold",     cavern_threshold);
 
 	settings->setNoiseParams("mgflat_np_terrain",      np_terrain);
 	settings->setNoiseParams("mgflat_np_filler_depth", np_filler_depth);
 	settings->setNoiseParams("mgflat_np_cave1",        np_cave1);
 	settings->setNoiseParams("mgflat_np_cave2",        np_cave2);
+	settings->setNoiseParams("mgflat_np_cavern",            np_cavern);
+	settings->setNoiseParams("mgflat_np_cave1",             np_cave1);
+	settings->setNoiseParams("mgflat_np_cave2",             np_cave2);
 }
 
 
@@ -188,6 +208,15 @@ void MapgenFlat::makeChunk(BlockMakeData *data)
 
 	blockseed = getBlockSeed2(full_node_min, seed);
 
+	s16 real_ground_level = ground_level;
+	s16 real_water_level = water_level;
+
+	s16 rel_alt = (node_min.Y + LAYER_DIV * LAYER_DEPTH + LAYER_DEPTH / 2) / LAYER_DEPTH - LAYER_DIV;
+	if (spflags & MGFLAT_LAYERS) {
+		ground_level = ground_level + rel_alt * LAYER_DEPTH;
+		water_level = water_level + rel_alt * LAYER_DEPTH;
+	}
+
 	// Generate base terrain, mountains, and ridges with initial heightmaps
 	s16 stone_surface_max_y = generateTerrain();
 
@@ -197,14 +226,42 @@ void MapgenFlat::makeChunk(BlockMakeData *data)
 	// Init biome generator, place biome-specific nodes, and build biomemap
 	if (flags & MG_BIOMES) {
 		biomegen->calcBiomeNoise(node_min);
+		if (spflags & MGFLAT_ALT_CHILL) {
+			for (s32 i = 0; i < csize.X * csize.Z; i++) {
+				((BiomeGenOriginal *)biomegen)->heatmap[i]
+					-= 20.f * (float) (heightmap[i]
+						- ground_level + real_ground_level) / 50.f + 5.f;
+			}
+		}
 		generateBiomes();
 	}
 
+	s16 zero_level = ground_level - real_ground_level - MAP_BLOCKSIZE;
+	bool treat_as_surface = false;
+	if (spflags & MGFLAT_LAYERS) {
+		if (full_node_min.Y >= zero_level - csize.Y
+				&& full_node_min.Y <= zero_level + LAYER_DEPTH / 2)
+			treat_as_surface = true;
+
+		ground_level = real_ground_level;
+		water_level = real_water_level;
+	}
+
 	if (flags & MG_CAVES) {
 		// Generate tunnels
 		generateCavesNoiseIntersection(stone_surface_max_y);
+
+		// Generate caverns
+		bool near_cavern = false;
+		if (spflags & MGFLAT_CAVERNS and (! treat_as_surface))
+			near_cavern = generateCavernsNoise(stone_surface_max_y);
+
 		// Generate large randomwalk caves
-		generateCavesRandomWalk(stone_surface_max_y, large_cave_depth);
+		if (near_cavern or treat_as_surface)
+			generateCavesRandomWalk(stone_surface_max_y,
+				-MAX_MAP_GENERATION_LIMIT);
+		else
+			generateCavesRandomWalk(stone_surface_max_y, large_cave_depth);
 	}
 
 	// Generate the registered ores
diff --git a/src/mapgen/mapgen_flat.h b/src/mapgen/mapgen_flat.h
index d8ec9f12..e0f1f127 100644
--- a/src/mapgen/mapgen_flat.h
+++ b/src/mapgen/mapgen_flat.h
@@ -25,6 +25,12 @@ with this program; if not, write to the Free Software Foundation, Inc.,
 /////// Mapgen Flat flags
 #define MGFLAT_LAKES 0x01
 #define MGFLAT_HILLS 0x02
+#define MGFLAT_CAVERNS     0x04
+#define MGFLAT_LAYERS     0x08
+#define MGFLAT_ALT_CHILL     0x10
+
+#define LAYER_DIV 5
+#define LAYER_DEPTH 6000
 
 class BiomeManager;
 
@@ -32,7 +38,7 @@ extern FlagDesc flagdesc_mapgen_flat[];
 
 struct MapgenFlatParams : public MapgenParams
 {
-	u32 spflags = 0;
+	u32 spflags = MGFLAT_CAVERNS & MGFLAT_LAYERS & MGFLAT_ALT_CHILL;
 	s16 ground_level = 8;
 	s16 large_cave_depth = -33;
 	s16 lava_depth = -256;
@@ -41,6 +47,9 @@ struct MapgenFlatParams : public MapgenParams
 	float lake_steepness = 48.0f;
 	float hill_threshold = 0.45f;
 	float hill_steepness = 64.0f;
+	s16 cavern_limit = -256;
+	s16 cavern_taper = 256;
+	float cavern_threshold = 0.7f;
 	s16 dungeon_ymin = -31000;
 	s16 dungeon_ymax = 31000;
 
@@ -48,6 +57,7 @@ struct MapgenFlatParams : public MapgenParams
 	NoiseParams np_filler_depth;
 	NoiseParams np_cave1;
 	NoiseParams np_cave2;
+	NoiseParams np_cavern;
 
 	MapgenFlatParams();
 	~MapgenFlatParams() = default;
